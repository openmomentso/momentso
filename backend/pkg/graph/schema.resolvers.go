package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"
	"time"

	"github.com/openmomentso/momentso/pkg/database/db"
	"github.com/openmomentso/momentso/pkg/graph/model"
)

// CreateTimeEntry is the resolver for the createTimeEntry field.
func (r *mutationResolver) CreateTimeEntry(ctx context.Context, input *model.CreateTimeEntryInput) (*db.TimeEntry, error) {
	panic(fmt.Errorf("not implemented: CreateTimeEntry - createTimeEntry"))
}

// UpTimeTimeEntry is the resolver for the upTimeTimeEntry field.
func (r *mutationResolver) UpTimeTimeEntry(ctx context.Context, id int64, startedAt *time.Time, description *string) (*db.TimeEntry, error) {
	panic(fmt.Errorf("not implemented: UpTimeTimeEntry - upTimeTimeEntry"))
}

// CompleteTimeEntry is the resolver for the completeTimeEntry field.
func (r *mutationResolver) CompleteTimeEntry(ctx context.Context, id int64) (*db.TimeEntry, error) {
	panic(fmt.Errorf("not implemented: CompleteTimeEntry - completeTimeEntry"))
}

// DeleteTimeEntry is the resolver for the deleteTimeEntry field.
func (r *mutationResolver) DeleteTimeEntry(ctx context.Context, id int64) (*db.TimeEntry, error) {
	panic(fmt.Errorf("not implemented: DeleteTimeEntry - deleteTimeEntry"))
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*db.User, error) {
	panic(fmt.Errorf("not implemented: Me - me"))
}

// TimeEntries is the resolver for the timeEntries field.
func (r *queryResolver) TimeEntries(ctx context.Context) ([]db.TimeEntry, error) {
	panic(fmt.Errorf("not implemented: TimeEntries - timeEntries"))
}

// TimeEntry is the resolver for the timeEntry field.
func (r *queryResolver) TimeEntry(ctx context.Context, id int64) (*db.TimeEntry, error) {
	panic(fmt.Errorf("not implemented: TimeEntry - timeEntry"))
}

// CreatedBy is the resolver for the createdBy field.
func (r *timeEntryResolver) CreatedBy(ctx context.Context, obj *db.TimeEntry) (*db.User, error) {
	panic(fmt.Errorf("not implemented: CreatedBy - createdBy"))
}

// CompletedAt is the resolver for the completedAt field.
func (r *timeEntryResolver) CompletedAt(ctx context.Context, obj *db.TimeEntry) (*time.Time, error) {
	panic(fmt.Errorf("not implemented: CompletedAt - completedAt"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// TimeEntry returns TimeEntryResolver implementation.
func (r *Resolver) TimeEntry() TimeEntryResolver { return &timeEntryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type timeEntryResolver struct{ *Resolver }
