package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"
	"time"

	"github.com/openmomentso/momentso/pkg/app/auth"
	"github.com/openmomentso/momentso/pkg/database/db"
)

// CreatedBy is the resolver for the createdBy field.
func (r *timeEntryResolver) CreatedBy(ctx context.Context, obj *db.TimeEntry) (*db.User, error) {
	// todo: loader
	user, err := r.DB.UserFindById(ctx, obj.CreatedBy)
	return &user, err
}

// CompletedAt is the resolver for the completedAt field.
func (r *timeEntryResolver) CompletedAt(ctx context.Context, obj *db.TimeEntry) (*time.Time, error) {
	if obj.CompletedAt.Valid {
		return &obj.CompletedAt.Time, nil
	}

	return nil, nil
}

// Email is the resolver for the email field.
func (r *userResolver) Email(ctx context.Context, obj *db.User) (string, error) {
	user, _ := auth.UserForCtx(ctx)
	if user.ID != obj.ID {
		return "", fmt.Errorf("unauthorized")
	}

	return user.Email, nil
}

// TimeEntry returns TimeEntryResolver implementation.
func (r *Resolver) TimeEntry() TimeEntryResolver { return &timeEntryResolver{r} }

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

type timeEntryResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
