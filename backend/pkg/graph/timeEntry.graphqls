type TimeEntry {
    id: ID!
    description: String
    createdBy: User!
    createdAt: Time!
    startedAt: Time!
    completedAt: Time

    project: Project
}

input CreateTimeEntryInput {
    description: String!
    startedAt: Time
}

input UpdateTimeEntryInput {
    description: String
    startedAt: Time
    completedAt: Time
}

type CreateTimeEntryPayload {
    timeEntry: TimeEntry!
}

type UpdateTimeEntryPayload {
    timeEntry: TimeEntry!
}

type TimeEntryConnection {
    edges: [TimeEntry!]!
}


type Query {
    timeEntries: TimeEntryConnection!
    timeEntry(id: ID!): TimeEntry!
    runningTimeEntry: TimeEntry
}

extend type Mutation {
    createTimeEntry(input: CreateTimeEntryInput!): CreateTimeEntryPayload!
    updateTimeEntry(id: ID!, input: UpdateTimeEntryInput!): UpdateTimeEntryPayload!
}